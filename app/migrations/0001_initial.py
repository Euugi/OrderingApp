# Generated by Django 4.1.3 on 2022-11-15 20:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_role', models.CharField(choices=[('customer', 'klient'), ('restaurant', 'restaurator'), ('supplier', 'dostawca')], max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ChatGroup',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
                ('description', models.TextField(blank=True)),
                ('mute_notifications', models.BooleanField(default=False)),
                ('icon', models.ImageField(blank=True, help_text='Group icon', upload_to='chartgroup')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
            ],
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('price', models.FloatField(max_length=6)),
                ('description', models.CharField(max_length=100)),
                ('ingredients', models.CharField(max_length=150, null=True)),
                ('alergens', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=250)),
                ('room', models.CharField(max_length=250)),
                ('date', models.CharField(max_length=250)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_status', models.CharField(choices=[('awaiting', 'Oczekująca na wystawienie'), ('issued', 'Wystawiona')], default='awaiting', max_length=30)),
                ('restaurant_rate', models.CharField(choices=[('0', 'Wybierz ocenę'), ('1', 'Bardzo źle'), ('2', 'Źle'), ('3', 'Dostatecznie'), ('4', 'Dobrze'), ('5', 'Bardzo dobrze')], default='', max_length=30)),
                ('restaurant_rate_desc', models.CharField(max_length=200)),
                ('supplier_rate', models.CharField(choices=[('0', 'Wybierz ocenę'), ('1', 'Bardzo źle'), ('2', 'Źle'), ('3', 'Dostatecznie'), ('4', 'Dobrze'), ('5', 'Bardzo dobrze')], default='', max_length=30)),
                ('supplier_rate_desc', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('category', models.CharField(choices=[('asian', 'Azjatycka'), ('european', 'Europejska'), ('italian', 'Włoska'), ('japan', 'Japońska')], max_length=30)),
                ('address_city', models.CharField(max_length=30)),
                ('address_street', models.CharField(max_length=30)),
                ('address_postalcode', models.CharField(max_length=6)),
                ('description', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=255, null=True, unique=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_status', models.CharField(choices=[('awaiting', 'Oczekujące na zatwierdzenie'), ('accepted_restaurant', 'Zatwierdzone przez restaurację'), ('in_progress', 'Realizowane'), ('finished', 'Zakończone'), ('aborted', 'Anulowane')], default='awaiting', max_length=50)),
                ('restaurant_acceptance', models.CharField(choices=[('awaiting', 'Oczekujące'), ('accepted', 'Zaakceptowane'), ('aborted', 'Odrzucone')], default='awaiting', max_length=30)),
                ('supplier_acceptance', models.CharField(choices=[('awaiting', 'Oczekujące'), ('accepted', 'Zaakceptowane'), ('aborted', 'Odrzucone')], default='awaiting', max_length=30)),
                ('delivery_address', models.CharField(max_length=60, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('items', models.ManyToManyField(blank=True, related_name='order', to='app.dish')),
                ('ordered_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ordered_user', to=settings.AUTH_USER_MODEL)),
                ('restaurant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.restaurant')),
                ('review', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.review')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='supplier', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='dish',
            name='restaurant_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.restaurant'),
        ),
    ]
